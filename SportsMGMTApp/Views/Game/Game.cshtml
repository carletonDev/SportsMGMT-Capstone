@model SportsMGMTApp.Models.GameModel

@{
    ViewBag.Title = "Game";
}

<h2>Create New Game</h2>
@{
    if (ViewBag.Message == "Game Created!")
    {
        //display red message if exception thrown
        <div class="alert alert-success" role="alert">
            @ViewBag.Message
        </div>
    }
    else if (ViewBag.Message == "Game Failed!")
    {
        //display red message if exception thrown
        <div class="alert alert-danger" role="alert">
            @ViewBag.Message
        </div>
    }
    else if (ViewBag.Message == "Home Team Cannot Be the Same as Away Team?")
    {
        //display red message if exception thrown
        <div class="alert alert-danger" role="alert">
            @ViewBag.Message
        </div>
    }
    else if (ViewBag.Message != null)
    {
        //display fail message if exception thrown
        <div class="alert alert-danger" role="alert">
            @ViewBag.Message
        </div>
    }
    else
    {

    }
}
<a href=@Url.Action("Calendar","User") class="btn btn-primary btn-icon-split">
    <span class="icon text-white-50">
        <i class="fas fa-flag"></i>
    </span>
    <span class="text">Back to Calendar</span>
</a>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container-fluid">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control", @placeholder = "Start Time" } })
                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control", @placeholder = "End Time" } })
                @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HomeTeam, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.HomeTeam, Model.GetTeam, "TeamName", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HomeTeam, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AwayTeam, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AwayTeam, Model.GetTeam, "TeamName", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AwayTeam, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HomeTeamScore, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HomeTeamScore, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HomeTeamScore, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AwayTeamScore, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AwayTeamScore, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AwayTeamScore, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-lg btn-primary btn-block btn-login text-uppercase font-weight-bold mb-2" />

            </div>
        </div>
    </div>
}

