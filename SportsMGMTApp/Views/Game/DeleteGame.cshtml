@model SportsMGMTApp.Models.GameModel

@{
    ViewBag.Title = "DeleteGame";

}

<a href=@Url.Action("ListGame", "Game") class="btn btn-primary btn-icon-split">
<span class="icon text-white-50">
    <i class="fas fa-flag"></i>
</span>
<span class="text">Back to List</span>
</a>
 
    @{
        if (ViewBag.Message == "Delete Successful")
        {
            //display success message in green boarder
            <div class="alert alert-success" role="alert">
                @ViewBag.Message
            </div>
        }
        else if (ViewBag.Message == "Delete Failed")
        {
            //display red message if exception thrown
            <div class="alert alert-danger" role="alert">
                @ViewBag.Message
            </div>
        }
        else
        {

        }

    }
    @using (Html.BeginForm("DeleteGame","Game"))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Delete Game</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.game.GameID)
            <div class="form-group">
                @Html.LabelFor(model => model.game.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.game.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.game.StartTime, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.game.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.game.EndTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.game.EndTime, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.game.HomeTeam, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.FormatValue(Model.game.HomeTeam, SportsMGMTApp.Models.GameModel.GetTeamNameString(Model.game.HomeTeam))
                    @Html.ValidationMessageFor(model => model.HomeTeam, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.game.AwayTeam, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.FormatValue(Model.game.AwayTeam,SportsMGMTApp.Models.GameModel.GetTeamNameString(Model.game.AwayTeam))
                    @Html.ValidationMessageFor(model => model.AwayTeam, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.game.HomeTeamScore, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.game.HomeTeamScore, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.game.HomeTeamScore, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.game.AwayTeamScore, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.game.AwayTeamScore, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.game.AwayTeamScore, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <button type="submit" onclick="return confirm('Are you sure you want to delete?')" class="btn btn-primary">Delete</button>
            </div>
        </div>
    }
