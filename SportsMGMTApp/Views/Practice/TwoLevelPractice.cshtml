@model SportsMGMTApp.Models.PracticeModel

@{
    ViewBag.Title = "Two Level Attendance";

    if (ViewBag.Message == "Practice and Attendance Created")
    {
        //display success message if exception thrown
        <div class="alert alert-success" role="alert">
            @ViewBag.Message
        </div>
    }
    else if (ViewBag.Message != null)
    {
        //display success message if exception thrown
        <div class="alert alert-danger" role="alert">
            @ViewBag.Message
        </div>
    }
    else
    {

    }
}


<div class="container-fluid">
    <div class="row no-gutter">
        <div class="col-md-8 col-lg-6">
            <div class="login d-flex align-items-center py-5">
                <div class="container">
                    <div class="row">
                        <div class="col-md-9 col-lg-8 mx-auto">
                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()


                                <h4>TwoLevel Practice</h4>
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.PracticeType, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.PracticeType, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.PracticeType, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control", @placeholder = "Start Time" } })
                                        @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control", @placeholder = "End Time" } })
                                        @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.UserID, Model.GetUsers(1034), new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    Can Attend?
                                    <div class="col-md-10">
                                        <div class="checkbox">
                                            @Html.EditorFor(model => model.Check)
                                            @Html.ValidationMessageFor(model => model.Check, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Create" class="btn btn-lg btn-primary btn-block btn-login text-uppercase font-weight-bold mb-2" />
                                    </div>
                                </div>

                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

