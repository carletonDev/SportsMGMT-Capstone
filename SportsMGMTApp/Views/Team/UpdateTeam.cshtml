@model SportsMGMTApp.Models.TeamModel

@{
    ViewBag.Title = "UpdateTeams";

    if (ViewBag.Message == "Update Failed")
    {
        // display red message in green boarder
        <div class="alert alert-danger" role="alert">
            @ViewBag.Message
        </div>
    }
    else if (ViewBag.Message == "Model State Invalid")
    {
        // display success message in green boarder
        <div class="alert alert-danger" role="alert">
            @ViewBag.Message
        </div>
    }
    else if (ViewBag.Message == "Update Successful")
    {
        //display success message in green boarder
        <div class="alert alert-success" role="alert">
            @ViewBag.Message
        </div>
    }

}
<a href=@Url.Action("ListTeam", "Team") class="btn btn-primary btn-icon-split">
    <span class="icon text-white-50">
        <i class="fas fa-flag"></i>
    </span>
    <span class="text">Back To List</span>
</a>
<br />
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.TeamID)
    @Html.HiddenFor(model=>model.TeamType)

    <div class="form-group">
        @Html.LabelFor(model => model.SalaryCap, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SalaryCap, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SalaryCap, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TeamName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TeamName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TeamName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Wins, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Wins, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Wins, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Losses, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Losses, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Losses, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-outline-primary" />
        </div>
    </div>
}
